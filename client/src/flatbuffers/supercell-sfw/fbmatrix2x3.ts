// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

export class FBMatrix2x3 {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):FBMatrix2x3 {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

a():number {
  return this.bb!.readFloat32(this.bb_pos);
}

b():number {
  return this.bb!.readFloat32(this.bb_pos + 4);
}

c():number {
  return this.bb!.readFloat32(this.bb_pos + 8);
}

d():number {
  return this.bb!.readFloat32(this.bb_pos + 12);
}

x():number {
  return this.bb!.readFloat32(this.bb_pos + 16);
}

y():number {
  return this.bb!.readFloat32(this.bb_pos + 20);
}

static sizeOf():number {
  return 24;
}

static createFBMatrix2x3(builder:flatbuffers.Builder, a: number, b: number, c: number, d: number, x: number, y: number):flatbuffers.Offset {
  builder.prep(4, 24);
  builder.writeFloat32(y);
  builder.writeFloat32(x);
  builder.writeFloat32(d);
  builder.writeFloat32(c);
  builder.writeFloat32(b);
  builder.writeFloat32(a);
  return builder.offset();
}

}
