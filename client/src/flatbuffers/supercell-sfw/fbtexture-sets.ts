// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { FBTextureSet } from '../supercell-sfw/fbtexture-set.js';


export class FBTextureSets {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):FBTextureSets {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsFBTextureSets(bb:flatbuffers.ByteBuffer, obj?:FBTextureSets):FBTextureSets {
  return (obj || new FBTextureSets()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsFBTextureSets(bb:flatbuffers.ByteBuffer, obj?:FBTextureSets):FBTextureSets {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new FBTextureSets()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

textureSets(index: number, obj?:FBTextureSet):FBTextureSet|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new FBTextureSet()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

textureSetsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startFBTextureSets(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addTextureSets(builder:flatbuffers.Builder, textureSetsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, textureSetsOffset, 0);
}

static createTextureSetsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startTextureSetsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endFBTextureSets(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static finishFBTextureSetsBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset);
}

static finishSizePrefixedFBTextureSetsBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset, undefined, true);
}

static createFBTextureSets(builder:flatbuffers.Builder, textureSetsOffset:flatbuffers.Offset):flatbuffers.Offset {
  FBTextureSets.startFBTextureSets(builder);
  FBTextureSets.addTextureSets(builder, textureSetsOffset);
  return FBTextureSets.endFBTextureSets(builder);
}
}
