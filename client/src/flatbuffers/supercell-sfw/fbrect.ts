// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

export class FBRect {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):FBRect {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

left():number {
  return this.bb!.readFloat32(this.bb_pos);
}

top():number {
  return this.bb!.readFloat32(this.bb_pos + 4);
}

right():number {
  return this.bb!.readFloat32(this.bb_pos + 8);
}

bottom():number {
  return this.bb!.readFloat32(this.bb_pos + 12);
}

static sizeOf():number {
  return 16;
}

static createFBRect(builder:flatbuffers.Builder, left: number, top: number, right: number, bottom: number):flatbuffers.Offset {
  builder.prep(4, 16);
  builder.writeFloat32(bottom);
  builder.writeFloat32(right);
  builder.writeFloat32(top);
  builder.writeFloat32(left);
  return builder.offset();
}

}
