// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

export class FBShapePoint {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):FBShapePoint {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

x():number {
  return this.bb!.readFloat32(this.bb_pos);
}

y():number {
  return this.bb!.readFloat32(this.bb_pos + 4);
}

u():number {
  return this.bb!.readUint16(this.bb_pos + 8);
}

v():number {
  return this.bb!.readUint16(this.bb_pos + 10);
}

static sizeOf():number {
  return 12;
}

static createFBShapePoint(builder:flatbuffers.Builder, x: number, y: number, u: number, v: number):flatbuffers.Offset {
  builder.prep(4, 12);
  builder.writeInt16(v);
  builder.writeInt16(u);
  builder.writeFloat32(y);
  builder.writeFloat32(x);
  return builder.offset();
}

}
