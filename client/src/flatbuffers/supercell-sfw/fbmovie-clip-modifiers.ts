// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { FBMovieClipModifier } from '../supercell-sfw/fbmovie-clip-modifier.js';


export class FBMovieClipModifiers {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):FBMovieClipModifiers {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsFBMovieClipModifiers(bb:flatbuffers.ByteBuffer, obj?:FBMovieClipModifiers):FBMovieClipModifiers {
  return (obj || new FBMovieClipModifiers()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsFBMovieClipModifiers(bb:flatbuffers.ByteBuffer, obj?:FBMovieClipModifiers):FBMovieClipModifiers {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new FBMovieClipModifiers()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

modifiers(index: number, obj?:FBMovieClipModifier):FBMovieClipModifier|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new FBMovieClipModifier()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 4, this.bb!) : null;
}

modifiersLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startFBMovieClipModifiers(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addModifiers(builder:flatbuffers.Builder, modifiersOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, modifiersOffset, 0);
}

static startModifiersVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 2);
}

static endFBMovieClipModifiers(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static finishFBMovieClipModifiersBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset);
}

static finishSizePrefixedFBMovieClipModifiersBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset, undefined, true);
}

static createFBMovieClipModifiers(builder:flatbuffers.Builder, modifiersOffset:flatbuffers.Offset):flatbuffers.Offset {
  FBMovieClipModifiers.startFBMovieClipModifiers(builder);
  FBMovieClipModifiers.addModifiers(builder, modifiersOffset);
  return FBMovieClipModifiers.endFBMovieClipModifiers(builder);
}
}
