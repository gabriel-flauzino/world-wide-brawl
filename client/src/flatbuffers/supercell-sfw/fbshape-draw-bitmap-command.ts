// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

export class FBShapeDrawBitmapCommand {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):FBShapeDrawBitmapCommand {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

unknown0():number {
  return this.bb!.readInt32(this.bb_pos);
}

textureIndex():number {
  return this.bb!.readInt32(this.bb_pos + 4);
}

pointCount():number {
  return this.bb!.readInt32(this.bb_pos + 8);
}

startingPointIndex():number {
  return this.bb!.readInt32(this.bb_pos + 12);
}

static sizeOf():number {
  return 16;
}

static createFBShapeDrawBitmapCommand(builder:flatbuffers.Builder, unknown0: number, texture_index: number, point_count: number, starting_point_index: number):flatbuffers.Offset {
  builder.prep(4, 16);
  builder.writeInt32(starting_point_index);
  builder.writeInt32(point_count);
  builder.writeInt32(texture_index);
  builder.writeInt32(unknown0);
  return builder.offset();
}

}
